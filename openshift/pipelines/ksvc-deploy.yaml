apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: ksvc-deploy
  labels:
    pipeline.openshift.io/runtime: java
    pipeline.openshift.io/type: knative
spec:
  description: >-
    The Pipline to build and deploy the Quarkus SpringBoot Demo Java App https://github.com/kameshsampath/quarkus-springboot-demo as Knative Service.
  params:
    - name: GITHUB_REPO_URL
      description: >-
        The GitHub Repo of the Java Application
      default: https://github.com/kameshsampath/quarkus-springboot-demo
    - name: GITHUB_REPO_REVISION
      description: >-
        The GitHub revision to use, defaults to master
      default: master
    - name: IMAGE_NAME
      description: >-
        The fully qualified image name e.g example.com/tekton-tutorial/helloworld
      default: image-registry.openshift-imageregistry.svc:5000/quarkus-springboot-demo/fruits-app
  workspaces:
    - name: source
    - name: maven-settings
  tasks:
    - name: clone-sources
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.GITHUB_REPO_URL)
        - name: revision
          value: $(params.GITHUB_REPO_REVISION)
        # just to do a fresh clone, as we already have the directory cloned
        # to reuse it we can exlude this step
        - name: deleteExisting
          value: "true"
      workspaces:
        - name: output
          workspace: source
    # Enable this task if you need to add Test
    # - name: maven-test
    #   taskRef:
    #     name: maven
    #     kind: ClusterTask
    #   runAfter:
    #     - clone-sources
    #   params:
    #     - name: GOALS
    #       value: ["-B", "clean", "test"]
    #   workspaces:
    #     - name: maven-settings
    #       workspace: maven-settings
    #     - name: source
    #       workspace: source
    - name: maven-package
      taskRef:
        name: maven
        kind: ClusterTask
      runAfter:
        - maven-test
      params:
        - name: GOALS
          value: ["-B", "-DskipTests", "clean", "package"]
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: source
          workspace: source
    - name: buildah-build-push
      taskRef:
        name: buildah
        kind: ClusterTask
      runAfter:
        - maven-package
      params:
        - name: CONTEXT
          value: "$(params.SERVICE_TIER)"
        - name: DOCKERFILE
          value: "$(params.SERVICE_TIER)/Dockerfile"
        - name: IMAGE
          value: "$(params.IMAGE_NAME)-$(params.SERVICE_TIER)"
        # since pushing to internal registry we skip TLS verify
        - name: TLSVERIFY
          value: "false"
      workspaces:
        - name: source
          workspace: source
    - name: create-pr
      taskRef:
        name: image-updater
      runAfter:
        - buildah-build-push
        # TODO ideally some integration tests should come here
      params:
        - name: driver
          value: "github"
        - name: file-path
          value: "openshift/knative/service.yaml"
        - name: image-repo
          value: $(params.APP_IMAGE_NAME)
        - name: new-image-url
          value: "$(params.IMAGE_NAME)-$(params.SERVICE_TIER)@$(tasks.buildah-build-push.results.IMAGE_DIGEST)"
        - name: source-branch
          value: "db-quarkus"
        - name: source-repo
          value: kameshsampath/quarkus-springboot-demo
        - name: update-key
          value: "spec.template.spec.containers.0.image"
        - name: insecure
          value: "true"
        - name: branch-generate-name
          value: "ci-"
